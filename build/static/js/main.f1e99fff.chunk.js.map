{"version":3,"sources":["services/person.js","components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","error","className","Filter","props","value","filterName","onChange","handleFilterNameChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","removePerson","name","number","onClick","window","confirm","Persons","persons","map","key","App","useState","setPersons","setFilterName","setNewName","setNewNumber","setMessage","useEffect","personService","initialPersons","updatePerson","changedPerson","returnedPerson","setTimeout","catch","console","log","filteredPersons","filter","toLowerCase","includes","event","target","preventDefault","some","find","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1e99fff.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    if (message.error) {\r\n        return (\r\n            <div className=\"error\">\r\n              {message.message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n          {message.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input\r\n                value={props.filterName}\r\n                onChange={props.handleFilterNameChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n            name: <input\r\n                value={props.newName}\r\n                onChange={props.handleNameChange}\r\n            />\r\n            </div>\r\n            <div>\r\n            number: <input\r\n                value={props.newNumber}\r\n                onChange={props.handleNumberChange}\r\n            />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Person = ({ person, removePerson }) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number} \r\n            <button onClick={\r\n                () => {\r\n                    if (window.confirm(`Delete ${person.name}?`))removePerson(person.id)}}>delete</button>\r\n        </div>\r\n    )\r\n}\r\nconst Persons = ({persons, removePerson}) => {\r\n    return (\r\n        <div>\r\n            {persons.map(person => {\r\n                return (\r\n                    <Person \r\n                        removePerson={removePerson}\r\n                        key={person.id} \r\n                        person={person} />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Persons;","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/person'\r\nimport Notification from './components/Notification'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [filterName, setFilterName] = useState('')\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n            })\r\n    }, [])\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (persons.some(person => person.name === newName)) {\r\n            const person = persons.find(person => person.name === newName)\r\n            const changedPerson = { ...person, number: newNumber }\r\n            if (window.confirm(`${person.name} is already added to the phonebook, replace the old number with a new one?`)) {\r\n                updatePerson(person.id, changedPerson)\r\n            }\r\n        } else {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService\r\n                .create(personObject)\r\n                .then(createdPerson => {\r\n                    setPersons(persons.concat(createdPerson))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setMessage({message: `Added ${createdPerson.name}`, error: false})\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response.data)\r\n                    setMessage({message: error.response.data.error, error: true})\r\n                })\r\n        }\r\n    }\r\n\r\n    const updatePerson = (id, changedPerson) => {\r\n        personService\r\n            .update(id, changedPerson)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n                setMessage({message: `Updated ${returnedPerson.name}`, error: false})\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                }, 5000)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data)\r\n                setMessage({message: error.response.data.error, error: true})\r\n                // setMessage({message: `Information of ${changedPerson.name} has already been removed from the server`, error: true})\r\n            })\r\n    }\r\n\r\n    const removePerson = (id) => {\r\n        personService\r\n            .remove(id)\r\n            .then(response => {\r\n                setPersons(persons.filter(person => person.id !== id))\r\n            })\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterNameChange = (event) => {\r\n        setFilterName(event.target.value)\r\n    }\r\n\r\n    const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={message} />\r\n            <Filter\r\n                filterName={filterName}\r\n                handleFilterNameChange={handleFilterNameChange}\r\n            />\r\n            <h3>Add a new</h3>\r\n            <PersonForm\r\n                addPerson={addPerson}\r\n                newName={newName}\r\n                handleNameChange={handleNameChange}\r\n                newNumber={newNumber}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n            <h3>Numbers</h3>\r\n            <Persons \r\n                persons={filteredPersons}\r\n                removePerson={removePerson} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}